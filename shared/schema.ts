export interface ContactSource {
  uri: string;
  domain: string;
}

export interface Contact {
  type?: string | null;
  email?: string | null;
  sources?: ContactSource[];
  twitter?: string | null;
  linkedin?: string | null;
  position?: string | null;
  full_name?: string | null;
  seniority?: string | null;
  department?: string | null;
  phone_number?: string | null;
  [key: string]: any;
}

export interface FundedCompany {
  id: string;
  source: string;
  company_name: string;
  domain?: string | null;
  funding_date?: string | null;       // ISO date string (YYYY-MM-DD)
  funding_stage?: string | null;
  funding_amount?: number | null;
  investors?: string[];
  contacts?: Contact[];
  social_media?: string[] | null;
  industry?: string | null;
  status: "new" | "contacted" | "follow-up" | string;
  created_at: string; // ISO timestamp
}

// For inserting new rows (id & created_at generated by Supabase)
export type InsertFundedCompany = Omit<FundedCompany, 'id' | 'created_at'>;

// Filters for fetching companies
export interface CompanyFilters {
  search?: string;
  date_range?: "week" | "month" | "quarter" | "all";
  funding_stage?: string;
  industry?: string;
  status?: string;
}

// Dashboard stats
export interface DashboardStats {
  total_companies: number;
  this_week: number;
  total_funding: string;
  contacted: number;
}

// Auth & User Management
export interface Profile {
  id: string;
  full_name?: string | null;
  role: "admin" | "subscriber" | "guest";
  created_at: string;
  updated_at: string;
}

export type InsertProfile = Omit<Profile, "created_at" | "updated_at">;
export type UpdateProfile = Partial<
  Omit<Profile, "id" | "created_at" | "updated_at">
>;

// Subscription Management
export interface Plan {
  id: string;
  name: string;
  price: number;
  features: string[];
  is_active: boolean;
  created_at: string;
  updated_at: string;
}

export type InsertPlan = Omit<Plan, "id" | "created_at" | "updated_at">;
export type UpdatePlan = Partial<
  Omit<Plan, "id" | "created_at" | "updated_at">
>;

export interface Subscription {
  id: string;
  user_id: string;
  plan_id: string;
  status: "active" | "canceled" | "past_due" | "incomplete";
  start_date: string;
  end_date?: string | null;
  external_subscription_id?: string | null;
  created_at: string;
  updated_at: string;
  plan?: Plan; // Optional populated plan data
}

export type InsertSubscription = Omit<
  Subscription,
  "id" | "created_at" | "updated_at" | "plan"
>;
export type UpdateSubscription = Partial<
  Omit<Subscription, "id" | "user_id" | "created_at" | "updated_at" | "plan">
>;

export interface Payment {
  id: string;
  subscription_id: string;
  amount: number;
  currency: string;
  status: "pending" | "completed" | "failed" | "refunded";
  transaction_id?: string | null;
  payment_method?: string | null;
  processed_at?: string | null;
  created_at: string;
}

export type InsertPayment = Omit<Payment, "id" | "created_at">;

// API Request/Response types
export interface AuthUser {
  id: string;
  email: string;
  profile?: Profile;
}

export interface SubscribeRequest {
  plan_id: string;
  payment_method?: string;
}

export interface SubscriptionResponse {
  subscription: Subscription;
  payment_url?: string; // For external payment processing
}

// Company reports
export type CompanyReport = {
  id: string;
  company_name: string | null;
  description: string | null;
  funding_round: string | null;
  funding_amount: number | null;
  funding_date: string | null;
  investors: string[] | null;
  markets: string[] | null;
  hq: string | null;
  founded_year: number | null;
  website: string | null;
  linkedin: string | null;
  twitter: string | null;
  instagram: string | null;
  facebook: string | null;
  crunchbase: string | null;
  pitchbook: string | null;
};
// Waiting list
export interface WaitingListEntry {
  id: string;
  first_name: string;
  last_name: string;
  company_name: string;
  email: string;
  created_at: string;
}

// For inserting new waiting list entries
export type InsertWaitingListEntry = Omit<WaitingListEntry, 'id' | 'created_at'>;